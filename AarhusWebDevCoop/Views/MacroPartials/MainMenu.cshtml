@inherits Umbraco.Web.Macros.PartialViewMacroPage
@using Umbraco.Core.Media;
@{
	var selection = CurrentPage.Site().Children.Where("Visible").OrderBy("Name"); 	
	IQueryable liste = null;
}



 <nav class="navbar navbar-default" role="navigation">

        <div class="navbar-header">
            <!-- burger menu streger KNAP-->
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse">
                <span class = "sr-only">Toggle navigation</span>
                <!-- burger menu streger IKON-->
                <span class = "icon-bar"></span>
                <span class = "icon-bar"></span>
                <span class = "icon-bar"></span>
            </button>
            <!-- LOGO-->

            <a href="/" class="navbar-brand">
				<img src='\Media\1013\logo_awdn.png' alt='LOGO' height='35'/>				
			</a>
        </div>

        <!-- Nav links-->
        <div class="collapse navbar-collapse" id="navbar-collapse">
            <ul class="nav navbar-nav" id="navUL">
              	<li><a href="/">@CurrentPage.Site().Name</a></li>    
				
                @foreach (var item in selection)
				{	
					var isProtected = umbraco.library.IsProtected(@item.id, @item.path);
					var loginAccess= umbraco.library.IsProtected(@item.id, @item.path) && umbraco.library.HasAccess(@item.id, @item.path);
					var showAllLink = false;
					var projects = false;
					
					if(!isProtected|| loginAccess) {
						
					if(@item.Children.Any()){
						if(@item.Name.Equals("Projects"))
						{		
							projects = true;
							
								if(@Members.GetCurrentLoginStatus().Name != null)
								{
									if(System.Web.Security.Roles.IsUserInRole(@Members.GetCurrentLoginStatus().Name, "Active")){
										 @** Active member **@
										
										liste = Model.Content.AncestorOrSelf(1)
										.Children
										.Where(x => x.Id == @item.Id)
										.First()
										.Children
										.Where("Visible") 
										.OrderBy("Name");
										
										showAllLink = true;
									}
									else if(System.Web.Security.Roles.IsUserInRole(@Members.GetCurrentLoginStatus().Name, "Guest")){
										 @** Guest member **@
										
										liste = Model.Content.AncestorOrSelf(1)
										.Children
										.Where(x => x.Id == @item.Id)
										.First()
										.Children
										.Where("Visible && projectStatus.Contains(\"13\") || projectStatus.Contains(\"11\")")  @** Guest **@
										.OrderBy("Name");
									}
									else
									{
										 @** Others **@
										
										liste = null;
									}
								}
								else {
									liste = null;
								}
						}
						else {
								liste = Model.Content.AncestorOrSelf(1)
								.Children
								.Where(x => x.Id == @item.Id)
								.First()
								.Children
								.Where("Visible")
								.OrderBy("Name");
								showAllLink = true;
						}
						
						if(@liste != null) {
						 <li class="dropdown">
							  <a href="@item.Url" 
								 class="dropdown-toggle" 
								 data-toggle="dropdown" 
								 role="button" 
								 aria-haspopup="true" 
								 aria-expanded="false">
								  @item.Name <span class="caret"></span>
							  </a>
							 <ul class="dropdown-menu">							
								 @if(showAllLink) {
								 <li>
									<a href="@item.Url">
										All @item.Name
									</a>
								 </li>
								  <li role="separator" class="divider"></li>
									  
									  if(projects){
                				 		 <li class="dropdown-header">Projectoverview</li>
									  }
									  else{
											 <li class="dropdown-header">Articlesoverview</li>
											
								 	 }
								 }
							 	@{
									foreach (IPublishedContent loopPage in @liste) {
										<li><a href="@loopPage.Url">@loopPage.Name</a></li>
									}
								 }
							</ul>
						</li>
						}
					}
					else {
						<li class="@(item.IsAncestorOrSelf(CurrentPage) ? "current" : null)">
							<a href="@item.Url">@item.Name</a>
						</li>
					}
				}
			}
            </ul>

        </div>
   </nav>
